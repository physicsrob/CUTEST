;
;
;
;
;      "set" COMMAND
;
;   THIS ROUTINE GETS THE ASSOCIATED PARAMETER AND
;   DISPATCHES TO THE PROPER ROUTINE FOR setTING
;   MEMORY VALUES.
;
	PUBLIC Cset
Cset:	call	FIND_NEXT_ARG	;SCAN TO SECONDARY COMMAND
	jz	ERROR_HANDLER	;MUST HAVE AT LEAST SOMETHING!!
	push	D	;SAVE SCAN ADDRESS
	call	GET_HEX_ARG	;CONVERT FOLLOWING VALUE
	xthl		;HL=SAVED SCAN addr AND STACK=VALUE
	lxi	D,setAB	;SECONDARY COMMAND TABLE
	call	FIND_CMD	;TRY TO LOCATE IT
	jmp	DISP0	;OFF TO IT OR ERROR if NOT in TBL
;
;
;  THIS ROUTINE SETS THE TAPE SPEED
;
TASPD:	equ	$	;GET CONVERTED VALUE
	ora	A	;IS IT ZERO?
	jz	SETSP	;YES--THAT IS A PROPER SPEED
	mvi	A,32	;NO--set SPEED PROPERLY THEN
SETSP:	sta	TSPD
	ret
;
;
	PUBLIC STSPD
STSPD:	equ	$	;VDM ESCAPE SEQUENCE COMES HERE
	mov	A,B	;GET CHAR FOR FOLLOWING DISPD
DISPD:	equ	$	;set DISPLAY SPEED
	sta	SPEED
	ret
;
;
setIN:	equ	$	;set AN INPUT PSUEDO PORT
	sta	IPORT
	ret
;
;
setOT:	equ	$	;set AN OUTPUT PSUEDO PORT
	sta	OPORT
	ret
;
;
setCI:	equ	$	;DEFINE USER INPUT RTN addr
	shld	USER_INP_PTR
	ret
;
;
setCO:	equ	$	;DEFINE USER OUTPUT RTN addr
	shld	USER_OUT_PTR
	ret
;
;
setTY:	equ	$	;set TAPE HDR TYPE
	sta	HTYPE
	ret
;
;
setXQ:	equ	$	;set TAPE-EXECUTE addDR FOR HDR
	shld	XEQAD
	ret
;
;
setNU:	equ	$	;HERE TO set NUMBER OF NULLS
	sta	NUCNT	;THIS IS IT
	ret
;
;
setCR:	equ	$	;set CRC TO BE NOrmAL, OR IGNORE CRC ERRORS
	sta	IGNCR	;FF=IGNORE CRC ERRORS, ELSE=NOrmAL
	ret
