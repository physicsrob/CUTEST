; AINP CONTINUES HERE (IT COULD HAVE BEEN A "JMP" THOUGH)
	PUSH	H	;SAVE HL FM ENTRY
	LXI	H,ITAB
;
;    THIS ROUTINE PROCESSES THE I/O REQUESTS
;
IOPRC:	ANI	3	;KEEP REGISTER "A" TO FOUR VALUES
	RLC		;COMPUTE ENTRY ADDRESS
	ADD	L
	MOV	L,A	;WE HAVE ADDRESS
	JMP	DISPT	;DISPATCH TO IT
;
;
OUTPR:	EQU	$	;PROCESS OUTPUT REQUESTS
	PUSH	H	;SAVE REGS
	LXI	H,OTAB	;POINT TO OUTPUT DISPATCH TABLE
	JMP	IOPRC	;DISPATCH FOR PROPER PSUEDO PORT
;
;
;
; CUTER SYSTEM I/O ROUTINES
;
;
;    THIS ROUTINE IS A MODEL OF ALL INPUT ROUTINES WITHIN
;  CUTER.  THE FIRST ROUTINE "KREA1" PERFORMS THE INPUT
;  FROM THE STANDARD KEYBOARD ON PARALLEL PORT 3.
;  ALL STANDARD INPUT DRIVERS RETURN EITHER THE CHARACTER
;  WITH A NON-ZERO FLAG, OR JUST A ZERO FLAG INDICATING
;  THAT NO CHARACTER IS AVAILABLE YET.  IT WILL BE THE
;  RESPONSIBILITY OF THE USER TO LOOP WAITING FOR A
;  CHARACTER, OR TO USE THE INPUT AS A STATUS REQUEST.
;  WHEN A CHARACTER IS AVAILABLE, IT IS RETURNED IN REG A.
;
;  THE FOLLOWING KEYBOARD ROUTINE MAY BE USED AS A SAMPLE
;  OF HOW TO WRITE A USER INPUT ROUTINE.
;
;         KEYBOARD INPUT ROUTINE
;
KREA1:	EQU	$	;KEYBOARD READ ROUTINE
	IN	KSTAT	;GET STATUS WORD
	CMA		;INVERT IT FOR PROPER RETURN
	ANI	KDR	;TEST NOT KEYBOARD DATA READY
	RZ		;ZERO IF NO CHARACTER RECEIVED
;
	IN	KDATA	;GET CHARACTER
	RET		;GO BACK WITH IT
;
;
;
;   SERIAL INPUT ROUTINE
;
SREA1:	EQU	$	;SERIAL INPUT ROUTINE
	IN	SSTAT	;GET STATUS
	ANI	SDR	;TEST FOR SERIAL DATA READY
	RZ		;FLAGS ARE SET
;
	IN	SDATA	;GET DATA BYTE
;  IT IS UP TO THE CALLER TO STRIP PARITY IF DESIRED
	RET		;WE HAVE IT
;
;
;   SERIAL DATA OUTPUT
;
SEROT:	EQU	$	;SERIAL OUTPUT ROUTINE
	IN	SSTAT	;GET STATUS
	ANI	STBE	;PUT HIGH BIT IN CARRY
	JZ	SEROT	;LOOP UNTIL TRANSMITTER BUFFER IS EMPTY
	MOV	A,B	;GET THE CHARACTER BACK
	OUT	SDATA	;SEND IT OUT
	RET		;AND WE'RE DONE
