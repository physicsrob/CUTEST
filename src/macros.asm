CALL_UNTIL_NZ	MACRO	ADDR
$$loop		CALL ADDR
		JZ $$loop
		ENDM

INPUT_ROUTINE	MACRO	i
	 	IFDEF PSEUDO_i_DATA_PORT

IN_i:		EQU $
		IN PSEUDO_i_STATUS_PORT
		IFNDEF PSEUDO_i_STATUS_READ_INVERT
PSEUDO_i_STATUS_READ_INVERT	EQU FALSE
		ENDIF
		IF PSEUDO_i_STATUS_READ_INVERT == TRUE
		   CMA
		ENDIF
		ANI PSEUDO_i_STATUS_READ_MASK
		RZ
		IN PSEUDO_i_DATA_PORT
		RET

	 	ENDIF
		ENDM

OUT_ROUTINE	MACRO	i
	 	   IFDEF PSEUDO_i_DATA_PORT
		      IFNDEF PSEUDO_i_OUTPUT_VDM
PSEUDO_i_OUTPUT_VDM	EQU FALSE
		      ENDIF
	 	      IF PSEUDO_i_OUTPUT_VDM == TRUE
OUT_i:		         EQU VDM01
		      ELSE
OUT_i:			  EQU $
$$loop		         IN PSEUDO_i_STATUS_PORT
		         ANI PSEUDO_i_STATUS_WRITE_MASK
		         JZ $$loop
			  MOV A,B
			  OUT PSEUDO_i_DATA_PORT
			  RET
		      ENDIF
		   ENDIF
		ENDM
